{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMpDkLTiYsXLUsjmH4FbrIl",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/joaoFelype/Introducao-ao-Python-e-Colab/blob/main/campo%20minado\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "def iniciar_jogo():\n",
        "    while True:\n",
        "        escolha = input(\"Para começar o jogo aperte s/n: \")\n",
        "        if escolha.lower() == 's':\n",
        "            # Cria as matrizes\n",
        "            tab = np.full((5, 5), '-')\n",
        "            bombas = np.random.choice([0, 1], size=(5, 5))\n",
        "\n",
        "            while True:\n",
        "                print(tab)\n",
        "\n",
        "                #elemento nas matrizes\n",
        "                linha = int(input(\"Escolha a coordenada da linha: \")) - 1\n",
        "                coluna = int(input(\"Escolha a coordenada da coluna: \")) - 1\n",
        "\n",
        "                # verificação de bomba\n",
        "                if bombas[linha, coluna] == 1:\n",
        "                    print(\"voce perdeu!\")\n",
        "                    print(bombas)\n",
        "                    break\n",
        "                else:\n",
        "                    # Conta o número de bombas adjacentes\n",
        "                    minas_adjacentes = np.sum(bombas[max(0, linha-1):min(5, linha+2), max(0, coluna-1):min(5, coluna+2)]) - bombas[linha, coluna]\n",
        "                    tab[linha, coluna] = str(minas_adjacentes) if minas_adjacentes > 0 else '0'\n",
        "\n",
        "                    # Marca os espaços vazios ao redor do número\n",
        "                    for i in range(max(0, linha-1), min(5, linha+2)):\n",
        "                        for j in range(max(0, coluna-1), min(5, coluna+2)):\n",
        "                            if bombas[i, j] == 0 and tab[i, j] == '-':\n",
        "                                tab[i, j] = '#'\n",
        "        else:\n",
        "            print(\"Volte sempre :)\")\n",
        "            break\n",
        "\n",
        "iniciar_jogo()\n",
        "\n"
      ],
      "metadata": {
        "id": "zZBdvMcqp6r3"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "sPD8ndn3vC4y"
      }
    }
  ]
}